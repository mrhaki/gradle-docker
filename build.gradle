import com.mrhaki.gradle.docker.DockerManagementPlugin

apply plugin: DockerManagementPlugin

version = '1.0.0'

description = 'Sample project for Docker Gradle plugin'

docker {
    // Configuration Docker plugin
    // Default: dockerHost = System.getProperty("docker.host") ?: System.env["DOCKER_HOST"] ?: System.properties['os.name'].toLowerCase().contains('windows') ? 'npipe:////./pipe/docker_engine' : 'unix:///var/run/docker.sock'
    
    // Check Gradle project property 'dockerHost' first.
    // Can be set in gradle.properties or via CLI with -PdockerHost=<value>.
    dockerHost = project.findProperty('dockerHost') ?: System.getenv('DOCKER_HOST') ?: System.properties['docker.host'] ?: 'unix:///var/run/docker.sock'
}

dockerConfig {
    // Configuration DockerManagementPlugin
    imageName = 'gradle-docker/sample'
    containerName = 'sample-www'

    containerConfiguration = {
        ports = ['9000:80']
    }
    
}

prepareImage {
    // Default all files from src/docker are already
    // copied to build/docker. Here we add extra
    // sources we want to copy and are needed
    // to build the Docker image.
    from 'src/www'
}
